name: Terraform Destroy Infrastructure

on:
  workflow_dispatch:

jobs:
  destroy_infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Download Terraform State from S3
        run: |
          mkdir -p ./ftp_ldap
          aws s3 cp s3://artefactos-jorge/terraform.tfstate ./ftp_ldap/terraform.tfstate

      - name: Verify Terraform State File Exists
        run: |
          if [ ! -f ./ftp_ldap/terraform.tfstate ]; then
            echo "Terraform state file not found!"
            exit 1
          fi

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init -reconfigure
        working-directory: ./ftp_ldap

      - name: Empty S3 Bucket Before Destroy
        run: |
          aws s3 rm s3://artefactos-jorge --recursive
          versions=$(aws s3api list-object-versions --bucket artefactos-jorge --query='{Objects: Versions[].{Key:Key,VersionId:VersionId}}')
          aws s3api delete-objects --bucket artefactos-jorge --delete "$versions" || true

      - name: Run Terraform Destroy
        run: |
         terraform destroy -auto-approve \
          -var "public_key=${{ secrets.SSH_PUBLIC_KEY }}"
        working-directory: ./ftp_ldap

      - name: Delete Terraform State File from S3
        run: |
          aws s3 rm s3://artefactos-jorge/terraform.tfstate || true
